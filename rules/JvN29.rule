neighbourhood_region_shape: VON_NEUMANN
neighbourhood_region_size: 1

n_states: 29
State: Ground
State: S
State: S0
State: S1
State: S00
State: S01
State: S10
State: S11
State: S000
State: East_Ordinary
State: North_Ordinary
State: West_Ordinary
State: South_Ordinary
State: East_Ordinary_E
State: North_Ordinary_E
State: West_Ordinary_E
State: South_Ordinary_E
State: East_Special
State: North_Special
State: West_Special
State: South_Special
State: East_Special_E
State: North_Special_E
State: West_Special_E
State: South_Special_E
State: C00
State: C01
State: C10
State: C11

null_states: Ground


Pattern: Annihilation of OTS
Result: Ground
                  (South_Special_E)
(East_Special_E)  [North_Ordinary, East_Ordinary, South_Ordinary, West_Ordinary, North_Ordinary_E, East_Ordinary_E, South_Ordinary_E, West_Ordinary_E]  (West_Special_E)
                  (North_Special_E)


Pattern: Annihilation of STS
Result: Ground
                   (South_Ordinary_E)
(East_Ordinary_E)  [North_Special, East_Special, South_Special, West_Special, North_Special_E, East_Special_E, South_Special_E, West_Special_E]  (West_Ordinary_E)
                   (North_Ordinary_E)


Pattern: Annihilation of Confluent Cells
Result: Ground
                  (South_Special_E)
(East_Special_E)  [C00, C01, C10, C11]  (West_Special_E)
                  (North_Special_E)


Pattern: [Quiescent, Excited] OTS -> Excited OTS
Result: East_Ordinary_E
                               ([South_Ordinary_E, C10, C11])
([East_Ordinary_E, C10, C11])  [East_Ordinary, East_Ordinary_E]  *
                               ([North_Ordinary_E, C10, C11])


Pattern: [Quiescent, Excited] OTS -> Excited OTS
Result: South_Ordinary_E
                               ([South_Ordinary_E, C10, C11])
([East_Ordinary_E, C10, C11])  [South_Ordinary, South_Ordinary_E]  ([West_Ordinary_E, C10, C11])
                               *


Pattern: [Quiescent, Excited] OTS -> Excited OTS
Result: West_Ordinary_E
   ([South_Ordinary_E, C10, C11])
*  [West_Ordinary, West_Ordinary_E]  ([West_Ordinary_E, C10, C11])
   ([North_Ordinary_E, C10, C11])


Pattern: [Quiescent, Excited] OTS -> Excited OTS
Result: North_Ordinary_E
                               *
([East_Ordinary_E, C10, C11])  [North_Ordinary, North_Ordinary_E]  ([West_Ordinary_E, C10, C11])
                               ([North_Ordinary_E, C10, C11])


Pattern: Excited OTS -> Quiescent STS
Result: East_Ordinary
   *
*  East_Ordinary_E  *
   *


Pattern: Excited OTS -> Quiescent STS
Result: South_Ordinary
   *
*  South_Ordinary_E  *
   *


Pattern: Excited OTS -> Quiescent STS
Result: West_Ordinary
   *
*  West_Ordinary_E  *
   *


Pattern: Excited OTS -> Quiescent STS
Result: North_Ordinary
   *
*  North_Ordinary_E  *
   *


Pattern: [Quiescent, Excited] STS -> Excited STS
Result: East_Special_E
                              ([South_Special_E, C10, C11])
([East_Special_E, C10, C11])  [East_Special, East_Special_E]  *
                              ([North_Special_E, C10, C11])


Pattern: [Quiescent, Excited] STS -> Excited STS
Result: South_Special_E
                              ([South_Special_E, C10, C11])
([East_Special_E, C10, C11])  [South_Special, South_Special_E]  ([West_Special_E, C10, C11])
                              *


Pattern: [Quiescent, Excited] STS -> Excited STS
Result: West_Special_E
   ([South_Special_E, C10, C11])
*  [West_Special, West_Special_E]  ([West_Special_E, C10, C11])
   ([North_Special_E, C10, C11])


Pattern: [Quiescent, Excited] STS -> Excited STS
Result: North_Special_E
                              *
([East_Special_E, C10, C11])  [North_Special, North_Special_E]  ([West_Special_E, C10, C11])
                              ([North_Special_E, C10, C11])


Pattern: Excited STS -> Quiescent STS
Result: East_Special
   *
*  East_Special_E  *
   *


Pattern: Excited STS -> Quiescent STS
Result: South_Special
   *
*  South_Special_E  *
   *


Pattern: Excited STS -> Quiescent STS
Result: West_Special
   *
*  West_Special_E  *
   *


Pattern: Excited STS -> Quiescent STS
Result: North_Special
   *
*  North_Special_E  *
   *


Pattern: C00 with input
Result: C01
                South_Ordinary_E
!East_Ordinary  C00               !West_Ordinary
                !North_Ordinary


Pattern: C00 with input
Result: C01
                 !South_Ordinary
East_Ordinary_E  C00              !West_Ordinary
                 !North_Ordinary


Pattern: C00 with input
Result: C01
                !South_Ordinary
!East_Ordinary  C00               !West_Ordinary
                North_Ordinary_E


Pattern: C00 with input
Result: C01
                !South_Ordinary
!East_Ordinary  C00              (West_Ordinary_E)
                !North_Ordinary


Pattern: C01 with input
Result: C11
                South_Ordinary_E
!East_Ordinary  C01               !West_Ordinary
                !North_Ordinary


Pattern: C01 with input
Result: C11
                 !South_Ordinary
East_Ordinary_E  C01              !West_Ordinary
                 !North_Ordinary


Pattern: C01 with input
Result: C11
                !South_Ordinary
!East_Ordinary  C01               !West_Ordinary
                North_Ordinary_E


Pattern: C01 with input
Result: C11
                !South_Ordinary
!East_Ordinary  C01              West_Ordinary_E
                !North_Ordinary


Pattern: C10 with input
Result: C01
                South_Ordinary_E
!East_Ordinary  C10               !West_Ordinary
                !North_Ordinary


Pattern: C10 with input
Result: C01
                 !South_Ordinary
East_Ordinary_E  C10              !West_Ordinary
                 !North_Ordinary


Pattern: C10 with input
Result: C01
                !South_Ordinary
!East_Ordinary  C10               !West_Ordinary
                North_Ordinary_E


Pattern: C10 with input
Result: C01
                !South_Ordinary
!East_Ordinary  C10              West_Ordinary_E
                !North_Ordinary


Pattern: C11 with input
Result: C11
                South_Ordinary_E
!East_Ordinary  C11               !West_Ordinary
                !North_Ordinary


Pattern: C11 with input
Result: C11
                 !South_Ordinary
East_Ordinary_E  C11              !West_Ordinary
                 !North_Ordinary


Pattern: C11 with input
Result: C11
                !South_Ordinary
!East_Ordinary  C11               !West_Ordinary
                North_Ordinary_E


Pattern: C11 with input
Result: C11
                !South_Ordinary
!East_Ordinary  C11              West_Ordinary_E
                !North_Ordinary


Pattern: Confluent State Rules
Result: C10
   *
*  C01  *
   *


Pattern: Confluent State Rules
Result: C00
   *
*  C10  *
   *


Pattern: Confluent State Rules
Result: C10
   *
*  C11  *
   *


Pattern: a cell in the ground state Ground, given an input, will transition to the S (newly sensitised) state in the next cycle
Result: S
                                     ([South_Ordinary_E, South_Special_E])
([East_Ordinary_E, East_Special_E])  Ground                                 ([West_Ordinary_E, West_Special_E])
                                     ([North_Ordinary_E, North_Special_E])


Pattern: a cell in the S11 state, given an input, will transition into the quiescent confluent state C00
Result: C00
                                     ([South_Ordinary_E, South_Special_E])
([East_Ordinary_E, East_Special_E])  S11                                    ([West_Ordinary_E, West_Special_E])
                                     ([North_Ordinary_E, North_Special_E])


Pattern: a cell in the S11 state, given no input, will transition into the south-directed special transmission state
Result: South_Special
   *
*  S11  *
   *


Pattern: a cell in the S1 state, given an input, will transition into the S11 state
Result: S11
                                     ([South_Ordinary_E, South_Special_E])
([East_Ordinary_E, East_Special_E])  S1                                     ([West_Ordinary_E, West_Special_E])
                                     ([North_Ordinary_E, North_Special_E])


Pattern: a cell in the S1 state, given no input, will transition into the S10 state
Result: S10
   *
*  S1  *
   *


Pattern: a cell in the S10 state, given an input, will transition into the west-directed special transmission state
Result: West_Special
                   ([South_Ordinary_E, South_Special_E])
(East_Ordinary_E)  S10                                    (West_Ordinary_E)
                   ([North_Ordinary_E, North_Special_E])


Pattern: a cell in the S10 state, given no input, will transition into the north-directed special transmission state
Result: North_Special
   *
*  S10  *
   *


Pattern: a cell in the S state, given an input, will transition into the S1 state
Result: S1
                                     ([South_Ordinary_E, South_Special_E])
([East_Ordinary_E, East_Special_E])  S                                      ([West_Ordinary_E, West_Special_E])
                                     ([North_Ordinary_E, North_Special_E])


Pattern: a cell in the S state, given no input, will transition into the S0 state
Result: S0
   *
*  S  *
   *


Pattern: a cell in the S01 state, given an input, will transition into the east-directed special transmission state
Result: East_Special
                                     ([South_Ordinary_E, South_Special_E])
([East_Ordinary_E, East_Special_E])  S01                                    ([West_Ordinary_E, West_Special_E])
                                     ([North_Ordinary_E, North_Special_E])


Pattern: a cell in the S01 state, given no input, will transition into the south-directed ordinary transmission state
Result: South_Ordinary
   *
*  S01  *
   *


Pattern: a cell in the S0 state, given an input, will transition into the S01 state
Result: S01
                                     ([South_Ordinary_E, South_Special_E])
([East_Ordinary_E, East_Special_E])  S0                                     ([West_Ordinary_E, West_Special_E])
                                     ([North_Ordinary_E, North_Special_E])


Pattern: a cell in the S0 state, given no input, will transition into the S00 state
Result: S00
   *
*  S0  *
   *


Pattern: a cell in the S00 state, given an input, will transition into the west-directed ordinary transmission state
Result: West_Ordinary
                                     ([South_Ordinary_E, South_Special_E])
([East_Ordinary_E, East_Special_E])  S00                                    ([West_Ordinary_E, West_Special_E])
                                     ([North_Ordinary_E, North_Special_E])


Pattern: a cell in the S00 state, given no input, will transition into the S000 state
Result: S000
   *
*  S00  *
   *


Pattern: a cell in the S000 state, given an input, will transition into the north-directed ordinary transmission state
Result: North_Ordinary
                                     ([South_Ordinary_E, South_Special_E])
([East_Ordinary_E, East_Special_E])  S000                                   ([West_Ordinary_E, West_Special_E])
                                     ([North_Ordinary_E, North_Special_E])


Pattern: a cell in the S000 state, given no input, will transition into the east-directed ordinary transmission state
Result: East_Ordinary
   *
*  S000  *
   *


